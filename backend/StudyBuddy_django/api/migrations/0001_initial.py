# Generated by Django 5.2 on 2025-04-16 02:27

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('account_id', models.AutoField(primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('username', models.CharField(max_length=100)),
                ('password', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Setting',
            fields=[
                ('email', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='api.account')),
                ('dark_mode', models.BooleanField(default=False)),
                ('font_size', models.IntegerField(default=12)),
                ('timezone', models.CharField(default='UTC', max_length=50)),
                ('enable_notifications', models.BooleanField(default=True)),
                ('notification_frequency', models.CharField(default='daily', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='UserData',
            fields=[
                ('email', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='api.account')),
                ('days', models.IntegerField(default=0)),
                ('streak', models.IntegerField(default=0)),
                ('calendar', models.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name='Block',
            fields=[
                ('block_id', models.AutoField(primary_key=True, serialize=False)),
                ('blocked_email', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blocked_by_users', to='api.account')),
                ('user_email', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blocked_users', to='api.account')),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('event_id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=100)),
                ('event_date', models.DateField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('description', models.TextField()),
                ('email', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.account')),
            ],
        ),
        migrations.CreateModel(
            name='Friend',
            fields=[
                ('friend_id', models.AutoField(primary_key=True, serialize=False)),
                ('chat_history', models.TextField()),
                ('friend_email', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='friends_of', to='api.account')),
                ('user_email', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_friends', to='api.account')),
            ],
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('note_id', models.AutoField(primary_key=True, serialize=False)),
                ('note', models.TextField()),
                ('email', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.account')),
            ],
        ),
        migrations.CreateModel(
            name='Quiz',
            fields=[
                ('quiz_id', models.AutoField(primary_key=True, serialize=False)),
                ('score', models.FloatField()),
                ('email', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.account')),
            ],
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('request_id', models.AutoField(primary_key=True, serialize=False)),
                ('friend_email', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_requests', to='api.account')),
                ('user_email', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_requests', to='api.account')),
            ],
        ),
    ]
